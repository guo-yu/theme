{"version":3,"sources":["../libs/theme.js"],"names":[],"mappings":"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","file":"theme.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport Hub from 'pkghub'\nimport _ from 'underscore'\nimport Promise from 'bluebird'\nimport render from 'pkghub-render'\nimport * as finder from './finder'\n\nconst hub = new Hub\nconst defaultHome = path.resolve(__dirname, '../', '../', '../')\n\n/**\n*\n* Class Theme\n* @param {String/Path} [home] [the home dir of all themes]\n*\n**/\nexport default class Theme {\n  constructor(home = defaultHome) {\n    this.path = {}\n    this.locals = {}\n    this.pattern = '-theme-'\n    this.path.home = home\n\n    // Fetch parent package.json\n    this.package = finder.pkg(this.path.home)\n\n    // Check public folder,\n    // Where we are going to copy shadow links.\n    this.path.public = path.join(this.path.home, this.package.public || './public')\n    \n    // Create shadow links\n    finder.shadows(this)\n  }\n\n  /**\n  *\n  * Lazy setter of Class Theme\n  * @param {[String]} [key] [the key]\n  * @param {[Any]} [value] [the value]\n  *\n  **/\n  set(key, value) {\n    if (!(key && value)) \n      return this\n\n    this[key] = value\n    return this\n  }\n\n  /**\n  *\n  * Inject locals to theme instance in res.locals.\n  * @param {[String]} [key] [the keyname of this local in res.locals]\n  *\n  **/\n  local(key) {\n    return (req, res, next) => {\n      if (!key) \n        return next()\n\n      this.locals[key] = res.locals[key]\n\n      return next()\n    }\n  }\n\n  /**\n  *\n  * List all theme module in the seleced home dir\n  * e.g: a vaild theme module'name is started with `<parentModuleName>-theme-<themeName>`,\n  * \n  * @param {[Function]} [callback] [the callback function triggered when all module listed]\n  *\n  **/\n  list() {\n    return hub.themes().then(themes => {\n      if (themes && themes.name) {\n        return Promise.resolve({\n          [themes.name]: themes\n        })\n      }\n\n      return Promise.resolve(themes)\n    })\n  }\n\n  /**\n  *\n  * Install new theme module from npm\n  * @param {[String | Array]} [name] [the module name or modules array]\n  * @param {[Function]} [callback] [the callback function triggerd when installed]\n  *\n  **/\n  install(name) {\n    if (!name) \n      return Promise.reject(new Error('Theme name required'))\n\n    return hub.install(name).then(modules => {\n      return finder.shadow(\n        modules.dependencies[name], \n        this.path.public\n      ).then(() => {\n        return Promise.resolve(modules)\n      })\n    })\n  }\n\n  /**\n  *\n  * Render html using selected target theme and template name\n  * e.g: theme.render('myParent-theme-default/index', {a:1}, function(html){});\n  *\n  * Shortname is also supported:\n  * e.g: theme.render(default/index, {a:a}, function(html){});\n  *\n  **/\n  render(template, data) {\n    // Check if it's valid filename\n    let pkgname = finder.split(template)\n    let filename = finder.split(template, 'filename')\n\n    if (!filename) \n      return Promise.reject(new Error('Theme.render(); target template not found'))\n\n    if (!pkgname && filename) \n      pkgname = this.default\n\n    if (!pkgname) \n      return Promise.reject(new Error('Theme.render(); target theme not found'))\n\n    // Check if it's a shortname\n    if (pkgname.indexOf('-') === -1 && this.package.name) \n      pkgname = this.package.name + this.pattern + pkgname\n\n    // Mix locals, instead of `app.locals` and `res.locals`\n    if (!_.isEmpty(this.locals)) \n      data = _.extend(this.locals, data)\n\n    // Return a Promise/A+\n    return render(\n      [ pkgname, filename ].join('/'), \n      data\n    )\n  }\n}\n"]}