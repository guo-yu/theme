{"version":3,"sources":["../libs/finder.js"],"names":[],"mappings":"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","file":"finder.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport _ from 'underscore'\nimport Promise from 'bluebird'\n\n/**\n*\n* Create a shadow link of theme's static folder.\n* \n* @param {Theme} [theme] the theme object.\n* @param {String} [realPath] [the realPath of target theme]\n* @return {Promise}\n*\n**/\nexport function shadow(theme, publicPath) {\n  if (!theme || !theme.realPath || !publicPath) \n    return Promise.reject(new Error('shadow() invalid arguments'))\n\n  // Ignore URIs.\n  if (isRemote(theme.static)) \n    return Promise.resolve()\n\n  const statics = path.join(theme.realPath, theme.static || './static')\n  const shadow = path.join(publicPath, theme.name)\n\n  // Check if public folder exist,\n  // If not, create a blank public folder using given\n  try {\n    if (!fs.existsSync(publicPath)) \n      fs.mkdirSync(publicPath)\n  } catch (err) {\n    return Promise.reject(err)\n  }\n\n  // Check if a shadow is linked to real static folder\n  try {\n    if (fs.readlinkSync(shadow) === statics)\n      return Promise.resolve()\n  } catch (err) {\n    // If link do not exist,\n    // Create a shadow link.\n    try {\n      fs.symlinkSync(statics, shadow, 'dir')\n    } catch (err) {\n      return Promise.reject(err)\n    }\n\n    return Promise.resolve()\n  }\n\n  // If a shadow is not linked to the given static folder path\n  // Remove it first\n  try {\n    fs.unlinkSync(shadow)\n    fs.symlinkSync(statics, shadow, 'dir')\n    return Promise.resolve()\n  } catch (err) {\n    return Promise.reject(err)\n  }\n}\n\n/**\n*\n* Create static folders' shadows of a theme instance.\n* @param {Theme} [self]\n*\n**/\nexport function shadows(self) {\n  const node_modules = path.join(self.path.home, './node_modules')\n\n  if (!fs.existsSync(node_modules)) \n    return\n\n  const files = fs.readdirSync(node_modules)\n\n  if (!files || files.length === 0) \n    return\n\n  var modules = files.filter(function(folder) {\n    const modulePath = path.join(node_modules, folder)\n    const isDir = fs.statSync(modulePath).isDirectory()\n    const packagePath = path.join(modulePath, './package.json')\n\n    // Check if it's a valid folder\n    if (!isDir) \n      return\n\n    // Check if the folder is a theme module\n    if (folder.indexOf(self.pattern) === -1) \n      return\n\n    // Check if there is a exist shadow\n    if (fs.existsSync(path.join(self.path.public, folder))) \n      return\n\n    var pkg = {}\n\n    if (fs.existsSync(packagePath))\n      pkg = readPkg(packagePath)\n\n    // The relative static folder path of this theme module.\n    const staticPath = pkg.static || './static'\n\n    // Check if there is a valid static folder in this theme module\n    if (!fs.existsSync(path.join(modulePath, staticPath))) \n      return\n\n    const theme = {\n      name: folder,\n      realPath: modulePath,\n      static: staticPath\n    }\n\n    shadow(theme, self.path.public)\n    \n    return true\n  })\n\n  return modules\n}\n\nexport function split(name, isFilename) {\n  if (!name || name.indexOf('/') === -1) \n    return\n  if (!isFilename) \n    return name.substr(0, name.indexOf('/'))\n\n  return name.substr(name.indexOf('/') + 1)\n}\n\n// Fetch package.json from parent dir\nexport function pkg(home) {\n  return readPkg(path.join(home, './package.json'))\n}\n\nfunction readPkg(filepath) {\n  try {\n    return require(filepath)\n  } catch (err) {\n    return {}\n  }\n}\n\n// Check if a string is uri\nfunction isRemote(dir) {\n  return dir && (dir.indexOf('http') === 0 || dir.indexOf('https') === 0)\n}\n"]}